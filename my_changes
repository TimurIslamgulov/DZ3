# **Домашнее задание к уроку 3!**

# ***Home_work1-3***

## **Этапы работы**:

#### **Для начала работы необходимо авторизоваться:** 

+ git config --global user.name - "<your_name>"
+ git config --global user.email - "<your_email_address>"

#### **Базовый набор комад для знакомства с Git (*Локальный репозитори*):** 
1. git init - создание нового репозитория 
2. git add *указываем название созданного файла* - сохранение 
3. git commit -m "*комментарий*" - сохранение текущего изменения 
> git commit -am "*комментарий*" - сокращенная операция для (git add "*фаил*" + git commit -m "*комментарий*")
> git add . - сокращенная операция для (git add "*фаил*" + git commit -m "*комментарий*"), если несколько файлов необходимо закомитить 
4. git status - показывает наличие изменений 
5. git reflog - показывает все коммиты в сокращенном виде
6. git log - выводит список всех коммитов
7. git diff - сравнивает коммиты 

#### **Набор команд для работы с ветками в Git (*Локальный репозитори*):** 
1. git branch - выводит все имеющиеся ветки 
2. git branch "*название ветки*" - создание новой ветки 
3. git checkout *"ветка"* - выполняет переход с одной ветки на другую
4. git merge "*ветка*" - команда для объединения веток 
5. git log --graph - выводит дерево веток (*при их наличии*)

#### **Набор команд для работы с удаленным репозиторием:**

Если мы работаем GitHab -> Git
1. git clone "*Ссылка скопированная на GitHab*" - скопировали репозиторий 
2. cd "*название папки*" - обязательная ккоманда для перехода в нужную нам папку (*скопированную с GitHab*) 
3. git pull - подгружает и сливает изменения, которые были внесены в удаленном репозитории (с другого компьютера)

Если мы работаем Git -> GitHab 
1. Наличие собственного аккаунта на GitHab
2. Создаем новый репозиторий на GitHab
3. git remote add - используется для создания записи о новом подключении к удаленному репозиторию
4. git branch -M "*основная ветка*" - указываем основную ветку
5. git push -u "*Ветка*" - направляем то что есть на локальном репозитории в итернет

### Так же в Git можно работать с *сслыками и картинками*, ___пример___: 

![GitHab](Cat.png)

Сслыка на профиль GeekBrains. 

 https://gb.ru/

 clear - очищает терминал 

# ***Заключение!***
