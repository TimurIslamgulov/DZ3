## Инструкция по пользованию командами GIT

    Для этого создаем папку в корневом диске для работы с Git

1. Проверяем правильно ли установлен git, используя команду **git --version**

2. Далее инициализируем git, используя команду **git init**

3. Командой **git status** проверяем статус папки.

4. Создаем файл в папке и работаем в нем.

5. Добавляем файл к отслеживанию используя команду **git add имя файла** c расширением.

6. Далее проверяем как изменился статус файла используя команду **git status**

7. Делаем коментарии с сохранениею используя команду **git commit -m "комментарий"**

8. Проверим статус сохранения командой **git status**

9. Проверяем все изменения командой **Git log** видим все коммиты.

10. Работаем с файлом, вносим изменения и снова сохраняем их.
Проверяем разницу между версиями командой  **git diff**

11. Чтобы переключиться между версиями сохранений используем команду **git checkout**

12. Переходим на актуальное состояние версии командой **Git checkout master**

![molodci](/ura-molodci.jpg)

[![SH](shpora_git.jpg)](https://www.neo-techno.ru/wp-content/uploads/2021/12/GIT_шпаргалка-2048x1448.png)

~~это еще не конец~~

                        * ПРОДОЛЖЕНИЕ *
                         
# Работа с у даленным репозиторием #

1. Регистрируемся на GitHub и создаем удаленный репозиторий.
2. Создаем в VSCode локальный репозиторий. 
3. Далее надо подружить (авторизовать) наш локальный репозиторий с GitHub
4. Отправть при помощи команды **git push** наш локальный репозиторий на удаленный в github.
5. Проводим изменения в файле на удаленном репозитории.
6. . Далее перекачиваем командой **git pull** актуальные состояние файлов из удаленного репозитория.

**PULL REUQUEST**
1. Чтобы предложить изменения в чужой проект на удаленном репозитории, необходимо создать отдельную вилку этого проекта. В этом удаленном репозитории нажимаем кнопку **fork**
2. Этот репозиторий появлеяется в нашем аккаунте. Далее нажимаем кнопку **code** копируем путь.
3. Далее переходим в vsCod и в терминале прописываем команду **git clone** и вставляем скопированную ссылку путь. Проект скопирован в **vsCode. Открваем его в отдельном терминале.
4. ВАЖНО! Для дальнейшей работы над этим проектом нам необходимо создать новую ветку отличную от ветки **main**. 

   Для этого используем ленивую команду **git checkout -b 'имя ветки'** или стандартую команду **git branch 'имя ветки'**
5. Далее работаем в проекте, файле, вносим изменения и сохраняем изменения используя команду **git commit -am "название коммита"** или, создаем новый файл с предложениями по проекту в новой уже созданной ветке и добавляем к отслеживанию используя команду **git add 'название файла с расширением'** и сохраняем изменения командой **git commit -m "комментарий"**

6. Готовый вариант отправляем при помощи команды **git push**.
7. На GitHub обновляем страницу. В разделе ветки видим созданную нами ветку и выбираем ее. 
8. Выполняем пул реквест нажимая кнопку **compare & pull request**

9. Добавляем к проекту комментарии при необходимости и жмем кнопку **create pull request**

Ура! Мы молодцы! ;-)