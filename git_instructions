**Команды гит**

 пройденные на первом уроке комнды для работы в гит

*Эти команды используем один раз. Прм попытке первого коммита терминал сам их предложит. Пишем юзернэйм и адрес почты:*

**git config --global user.name "username"**

**git config --global user.email "qwerty@mail.com"**

*создаём репозиторий:*

**git init**

*после сохранения (желательно автосохранением) добавляем конкретный файл в репозиторий для будущего коммита. Если не указать имя - будут добавлены все файлы*

**git add file.md**

**git add .**

*последний этап сохранения. флаг -m не понятно зачем. в кавычках - комментарий к коммиту, как вариант - название сэйва. можно поставить флаг -a , это флаг предыдущей команды add, таким образом сэкономим одну строчку:*

**git commit -m "save1"**

**git commit -am "save2"**

*команда, чтобы посмотреть текущее состояние репозитория, пока бесполезн, т.к. у нас или коммит  или не коммит, остальное не важно*

**git status** 

*получаем лог всех действий и коммитов а так же их уникальные хэш-номера*

**git log**

*сокращённая версия предыдущей комманды или же можно к предыдущей команде добавить --oneline, тоже будет сокращённая версия:*

**git reflog**

**git log --oneline**

*можно перепрыгнуть в любой предыдущий коммит дописав первые четыре символа с хэш-номера этого коммита, которые полчаем предыдущей коммандой , или же в самую последнюю откоммиченую версию , если подпишем master:*

**git checkout**

**git checkout a6gh**

**git checkout master**

*можно посмотреть на различия между редактируемой сейчас версией файла и последней откоммиченной:*

**git diff**

*или же между двумя конкретными версиями , если использовать их уникальные номера. Причём порядок важен:"

**git diff 76dt j29l**

*этой компандой можно вызвать помощь по инструкциям:*

**git -help**
